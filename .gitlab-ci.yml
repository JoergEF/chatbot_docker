# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: python:3.9.5
before_script:
- python3 --version
- python3 -m venv $CI_BUILDS_DIR/venv
- export PATH="$CI_BUILDS_DIR/venv/bin:$PATH"
- pip3 install -r requirements.txt
stages:
- Static Analysis
- test
mypy:
  stage: Static Analysis
  script:
  - pwd
  - ls -l
  - python3 -m mypy --ignore-missing-imports chatbot-webgui.py
  - python3 -m mypy --ignore-missing-imports chatbot_ai.py
  tags:
  - docker
  - linux
flake8:
  stage: Static Analysis
  script:
  - flake8 --max-line-length=120 --ignore=F401 *.py
  tags:
  - docker
  - linux
pylint:
  stage: Static Analysis
  allow_failure: true
  script:
  - pylint -d C0301,C0103,C0114,C0116,C0115,C0411,R,W *.py
  tags:
  - docker
  - linux
bandit:
  stage: test
  tags:
    - docker
    - linux
  script:
    - bandit -f json -o $CI_PROJECT_DIR/gl-bandit-report.json
  artifacts:
    reports:
      sast: gl-bandit-report.json

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
variables:
  SAST_EXCLUDED_ANALYZERS: "eslint,bandit"
